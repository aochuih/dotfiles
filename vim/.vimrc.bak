set nocompatible              " be iMproved, required
filetype off                  " required

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
    " alternatively, pass a path where Vundle should install plugins
    "call vundle#begin('~/some/path/here')

    " let Vundle manage Vundle, required
    Plugin 'gmarik/Vundle.vim'

    " The following are examples of different formats supported.
    " Keep Plugin commands between vundle#begin/end.
    " plugin on GitHub repo
    "Plugin 'tpope/vim-fugitive'
    Plugin 'Valloric/YouCompleteMe'
    Plugin 'octol/vim-cpp-enhanced-highlight'
    Plugin 'vim-ruby/vim-ruby'
    " plugin from http://vim-scripts.org/vim/scripts.html
    "Plugin 'L9'
    " Git plugin not hosted on GitHub
    "Plugin 'git://git.wincent.com/command-t.git'
    " git repos on your local machine (i.e. when working on your own plugin)
    "Plugin 'file:///home/gmarik/path/to/plugin'
    " The sparkup vim script is in a subdirectory of this repo called vim.
    " Pass the path to set the runtimepath properly.
    "Plugin 'rstacruz/sparkup', {'rtp': 'vim/'}
    " Avoid a name conflict with L9
    "Plugin 'user/L9', {'name': 'newL9'}

    " All of your Plugins must be added before the following line
    Bundle 'thoughtbot/vim-rspec'
    Bundle 'jgdavey/tslime.vim'
    Bundle 'scrooloose/nerdtree'
    " Bundle 'kien/ctrlp'
call vundle#end()            " required
filetype plugin indent on    " required
    " To ignore plugin indent changes, instead use:
    "filetype plugin on
    "
    " Brief help
    " :PluginList       - lists configured plugins
    " :PluginInstall    - installs plugins; append `!` to update or just :PluginUpdate
    " :PluginSearch foo - searches for foo; append `!` to refresh local cache
    " :PluginClean      - confirms removal of unused plugins; append `!` to auto-approve removal
    "
    " see :h vundle for more details or wiki for FAQ
    " Put your non-Plugin stuff after this line

" execute pathogen#infect()

" This tells vim-rspec to use Send_to_Tmux to run the selected specs.
let g:rspec_command = 'call Send_to_Tmux("rspec {spec}\n")'
" vim-rspec mappings
map <Leader>t :call RunCurrentSpecFile()<CR>
map <Leader>s :call RunNearestSpec()<CR>
map <Leader>l :call RunLastSpec()<CR>
map <Leader>a :call RunAllSpecs()<CR>

" NergTree
nmap <silent> <c-n> :NERDTreeToggle<CR>
" autocmd VimEnter * NERDTree
" autocmd BufEnter * NERDTreeMirror

syntax enable
set ai
set cindent
set hls

set showmatch
set number

set bs=2
set expandtab
set shiftwidth=4
set tabstop=4
set laststatus=2

"set foldmethod=syntax
"set cursorline

set autoread
set ignorecase
set helplang=cn

highlight Normal ctermfg=grey ctermbg=black
"set background=dark
colorscheme molokai
"colorscheme solarized

" Explore mode style
let g:netrw_liststyle=3

" set runtimepath^=~/.vim/bundle/ctrlp.vim
